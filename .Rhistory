library(sap)
sap::hello()
sap::normalHist(2,FALSE)
sap::normalHist(4)
library(sap)
library(sap)
install.packages("bibliometrix")
install.packages("tidyverse", dependencies = TRUE )
install.packages("bibliometrix", dependencies=TRUE)
biblometrics
load("~/Code/r-sap/data/wos.rda")
install.packages("dplyr", "factoextra", "FactoMineR", "ggplot2", "igraph", "Matrix", "rscopus", "SnowballC", "stringr")
install.packages("dplyr", "factoextra", "FactoMineR", "ggplot2", "igraph", "Matrix", "rscopus", "SnowballC", "stringr")
install.packages("dplyr", "factoextra", "FactoMineR", "ggplot2", "igraph", "Matrix", "rscopus", "SnowballC", "stringr")
install.packages("bibliometrix", dependencies = TRUE)
install.packages(“bibliometrix”, dependencies=TRUE)
install.packages(“bibliometrix”, dependencies=TRUE)
install.packages('bibliometrix', dependencies=TRUE)
install.packages('bibliometrix', dependencies=TRUE)
load("~/Code/r-sap/data/wos.rda")
load("~/Code/r-sap/data/wos.rda")
load("~/Code/r-sap/data/wos.rda")
load("~/Code/r-sap/data/wos.rda")
usethis::use_data()
use_data()
load("~/Code/r-sap/data/wos.rda")
load("~/Code/r-sap/data/wos.rda")
library(sap)
sap
library(sap)
library(sap)
sap::isi_df("./examples/saple.isi.txt")
sap::isi_df("./examples/saple.isi.txt")
sap::isi_df("./examples/sample.isi.txt")
library(sap)
library(sap)
library(sap)
sap::isi_df("./examples/sample.isi.txt")
library(sap)
library(sap)
library(sap)
sap::isi_df("./examples.sample.isi.txt")
sap::isi_df("./examples/sample.isi.txt")
library(sap)
sap::isi_df("./examples/sample.isi.txt")
sap_load <- function(file) {
isi_df = bibliometrix::convert2df(file = file,
dbsource = "wos",
format = "plaintext")
}
View(sap_load)
#' @import utils
#' @import magrittr
#' @import rlang
#'
#' @importFrom dplyr %>%
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#'
#' @return a graph object
#'
sap_graph <- function(isi_df) {
isi_df$ID_WOS <- rownames(isi_df)
isi_df$ID_WOS <- ifelse(!is.na(isi_df$VL),
paste(isi_df$ID_WOS,
isi_df$VL,
sep = ", V"),
isi_df$ID_WOS)
isi_df$ID_WOS <- ifelse(!is.na(isi_df$BP),
paste(isi_df$ID_WOS,
isi_df$BP,
sep = ", P"),
isi_df$ID_WOS)
isi_df$ID_WOS <- ifelse(!is.na(isi_df$DI),
paste(isi_df$ID_WOS,
isi_df$ID,
sep = ", DOI"),
isi_df$ID_WOS)
edgelist <-
dplyr::as_tibble(isi_df) %>%
dplyr::mutate(cited_references = .data$CR) %>%
tidyr::separate_rows(.data$CR, sep = ";") %>%
dplyr::filter(!grepl(pattern = "^[0-9].*",
.data$CR)) %>%
dplyr::select(.data$ID_WOS, .data$CR) %>%
dplyr::filter(.data$CR != "" & is.na(.data$CR) == FALSE) %>%
dplyr::mutate(ID_WOS = stringr::str_to_upper(.data$ID_WOS),
CR = stringr::str_to_upper(.data$CR)) %>%
unique()
graph <-
igraph::graph.data.frame(edgelist) %>%
igraph::simplify()
graph_1 <-
igraph::delete.vertices(graph,
which(igraph::degree(graph,
mode = "in") == 1 &
igraph::degree(graph,
mode = "out") == 0))
giant.component <- function(graph) {
cl <- igraph::clusters(graph)
igraph::induced.subgraph(graph,
which(cl$membership == which.max(cl$csize)))
}
graph_file <- giant.component(graph_1)
}
sap_process <- function(graph_file) {
network.metrics <-
dplyr::tibble(
id = igraph::V(graph_file)$name,
indegree = igraph::degree(graph_file, mode = "in"),
outdegree = igraph::degree(graph_file, mode = "out"),
bet = igraph::betweenness(graph_file)
)
seminals <- network.metrics[network.metrics$outdegree == 0,
c("id","indegree")]
seminals <- utils::head(seminals[with(seminals, order(-indegree)),],10)
structurals <- network.metrics[network.metrics$bet > 0,
c("id", "bet")]
structurals <- utils::head(structurals[with(structurals, order(-bet)),],10)
current <- network.metrics[network.metrics$indegree == 0,
c("id","outdegree")]
current <- utils::head(current[with(current, order(-outdegree)),], 60)
if(sum(network.metrics$bet) == 0 ) {
stop("Your ToS does not have trunk, check the search out")} else {
seminals$ToS <- "Raiz"
seminals$order <- 1:length(seminals$id)
structurals$ToS <- "Tronco"
structurals$order <- 1:length(structurals$id)
current$ToS <- "Hojas"
current$order <- 1:length(current$id)
tos <- rbind(seminals[,c(1,3,4)], structurals[,c(1,3,4)], current[,c(1,3,4)])
}
}
sap_tos <- function(file) {
isi_file <- sap_load(file)
graph_file <- sap_graph(isi_file)
sap_file <- sap_process(graph_file)
}
tos<
tos<-sap_tos("/Users/lizetgomez/Downloads/Scientometrics.txt")
library(tidyverse)
library(sap)
tos<-sap_tos("/Users/lizetgomez/Downloads/Scientometrics.txt")
sap_load <- function(file) {
isi_df = bibliometrix::convert2df(file = file,
dbsource = "wos",
format = "plaintext")
}
#' Creating a graph object
#'
#' from df isi to graph
#'
#' Load a dataframe with isi data and convert it
#' in a graph
#'
#' @param isi_df a dataframe with wos data
#'
#' @author Sebastian Robledo
#'
#' @import dplyr
#' @import tidyr
#' @import igraph
#' @import tidyverse
#' @import stringr
#' @import utils
#' @import magrittr
#' @import rlang
#'
#' @importFrom dplyr %>%
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#'
#' @return a graph object
#'
sap_graph <- function(isi_df) {
isi_df$ID_WOS <- rownames(isi_df)
isi_df$ID_WOS <- ifelse(!is.na(isi_df$VL),
paste(isi_df$ID_WOS,
isi_df$VL,
sep = ", V"),
isi_df$ID_WOS)
isi_df$ID_WOS <- ifelse(!is.na(isi_df$BP),
paste(isi_df$ID_WOS,
isi_df$BP,
sep = ", P"),
isi_df$ID_WOS)
isi_df$ID_WOS <- ifelse(!is.na(isi_df$DI),
paste(isi_df$ID_WOS,
isi_df$ID,
sep = ", DOI"),
isi_df$ID_WOS)
edgelist <-
dplyr::as_tibble(isi_df) %>%
dplyr::mutate(cited_references = .data$CR) %>%
tidyr::separate_rows(.data$CR, sep = ";") %>%
dplyr::filter(!grepl(pattern = "^[0-9].*",
.data$CR)) %>%
dplyr::select(.data$ID_WOS, .data$CR) %>%
dplyr::filter(.data$CR != "" & is.na(.data$CR) == FALSE) %>%
dplyr::mutate(ID_WOS = stringr::str_to_upper(.data$ID_WOS),
CR = stringr::str_to_upper(.data$CR)) %>%
unique()
graph <-
igraph::graph.data.frame(edgelist) %>%
igraph::simplify()
graph_1 <-
igraph::delete.vertices(graph,
which(igraph::degree(graph,
mode = "in") == 1 &
igraph::degree(graph,
mode = "out") == 0))
giant.component <- function(graph) {
cl <- igraph::clusters(graph)
igraph::induced.subgraph(graph,
which(cl$membership == which.max(cl$csize)))
}
graph_file <- giant.component(graph_1)
}
#' Creating our ToS
#'
#' from graph isi to sap - Tree of Science
#'
#' Load a dataframe with isi data and convert it
#' in a graph
#'
#' @param graph_file a dataframe with wos data
#'
#' @author Sebastian Robledo
#'
#' @import dplyr
#' @import igraph
#' @import utils
#'
#' @return a graph object
#' @importFrom utils head
sap_process <- function(graph_file) {
network.metrics <-
dplyr::tibble(
id = igraph::V(graph_file)$name,
indegree = igraph::degree(graph_file, mode = "in"),
outdegree = igraph::degree(graph_file, mode = "out"),
bet = igraph::betweenness(graph_file)
)
seminals <- network.metrics[network.metrics$outdegree == 0,
c("id","indegree")]
seminals <- utils::head(seminals[with(seminals, order(-indegree)),],10)
structurals <- network.metrics[network.metrics$bet > 0,
c("id", "bet")]
structurals <- utils::head(structurals[with(structurals, order(-bet)),],10)
current <- network.metrics[network.metrics$indegree == 0,
c("id","outdegree")]
current <- utils::head(current[with(current, order(-outdegree)),], 60)
if(sum(network.metrics$bet) == 0 ) {
stop("Your ToS does not have trunk, check the search out")} else {
seminals$ToS <- "Raiz"
seminals$order <- 1:length(seminals$id)
structurals$ToS <- "Tronco"
structurals$order <- 1:length(structurals$id)
current$ToS <- "Hojas"
current$order <- 1:length(current$id)
tos <- rbind(seminals[,c(1,3,4)], structurals[,c(1,3,4)], current[,c(1,3,4)])
}
}
library(tidyr)
library(tidyverse)
library(rsap)
library(sap)
tos<- rsap::sap_tos("../../Desktop/singlearticle.txt")
install.packages("~/Code/rsap_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Code/rsap_0.1.0.tar.gz", repos = NULL, type = "source")
library(tidyverse)
tos<- rsap::sap_tos("../../Desktop/singlearticle.txt")
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
library(sap)
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
library(tinytex)
library(tinytex)
install.packages("~/Code/sap_0.1.0.tar.gz", repos = NULL, type = "source")
tos<- rsap::sap_tos("../../Desktop/Scientometrics.txt")
view(tos)
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
library(tidyverse)
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
tos<- rsap::sap_tos("../../Desktop/bitpatternsavedrecs.txt")
tos<- rsap::sap_tos("../../Desktop/Scientometrics.txt")
tos<- rsap::sap_tos("../../Desktop/Scientometrics.txt")
sap::sap_tos('custom1.css')
sap::sap_tos('/Users/lizetgomez/Desktop/Scientometrics.txt')
data->sap::sap_tos('/Users/lizetgomez/Desktop/Scientometrics.txt')
data<-sap::sap_tos('/Users/lizetgomez/Desktop/Scientometrics.txt')
View(data)
data<-sap::sap_tos('/Users/lizetgomez/Desktop/bitpatternsavedrecs.txt')
load("~/Code/r-sap/.RData")
load("~/Code/r-sap/.RData")
load("~/Code/r-sap/data/wos.rda")
load("~/Code/r-sap/data/wos.rda")
data<-sap::sap_tos('/Users/lizetgomez/Desktop/Scientometrics.txt')
dataaa<-sap::sap_tos('/Users/lizetgomez/Desktop/Scientometrics.txt')
View(dataaa)
load("~/Code/r-sap/.RData")
remove.packages("rsap")
load("~/Code/r-sap/data/wos.rda")
library(rsap)
library(rsap)
library(rsap)
devtools::document()
library(rsap)
library(rsap)
